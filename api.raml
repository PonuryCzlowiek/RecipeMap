#%RAML 0.8
---
title: RecipeMap API
baseUri: http://localhost:8080/{version}
version: v1

schemas
 - recipe: !include recipemap-include-recipe.schema

resourceTypes:
  - collection:
	  description: Collection of available <<resourcePathName>> in cookbook
      get:
	    description: Get a list of <<resourcePathName>>.
		responses:
		  200:
		    body:
			  application/json:
			    example: |
				  <<exampleCollection>>
      post:
	    description: Add a new <<resourcePathName|!singularize>> to cookbook
		queryParameters:
		  access_token:
		    description: "Access token provided for any authenticated calls"
			example: BwEqumNtMVOz8O374Zqw
			required: true
			type: string
		  body:
		    application/json:
			  schema: <<resourcePathName|!singularize>>
			  example:
				<<exampleItem>>
		  responses:
		    200:
			  body:
			    application/json:
				  example: |
				    { "path": "http://localhost:8080/cookbook/recipes/1" }
  - collection-item:
      description: Entity representing <<resourcePathName>>
	  get:
	    description: Get the <<resourcePathName|!singularize>> with <<resourcePathName|!singularize>>Id = {<<resourcePathName|!singularize>>Id}
	    responses:
	      200:
		    body:
		      application/json:
	  		    example: |
	  		      <<exampleItem>>
		  404:
		    body:
		      application/json:
			    example: |
			      {"message": "Item not found"}
	
traits:
  - searchable:
      queryParameters:
        query:
          description: |
            JSON array [{"field1","value1","operator1"},{"field2","value2","operator2"},...,{"fieldN","valueN","operatorN"}] <<description>>
          example: |
            <<example>>
  - pageable:
	queryParameters:
	  offset:
	    description: Skip over a number of elements by specifying an offset value for the query
		type: integer
		required: false
		example: 20
		default: 0
	  limit:
		description: Limit the number of elements on the response
		type: integer
		required: false
		example: 80
		default: 10
/recipes:
  type: 
    collection:
	  exampleCollection: !include recipemap-include-recipes.sample
	  exampleItem: !include recipemap-include-recipe.sample
  get:
    is: [
	      searchable: {
		    description: "with valid searchable fields: name", 
			example: "[\"name\", \"Fasolka\", \"like\"]"
		  },
		  pageable
		]
  /{recipeId}:
    type: 
	  collection-item:
	    exampleItem: !include recipemap-include-recipe.sample
    description: Get all available recipes, filtered by given parameters
    queryParameters:
	  type: 
	    displayName: Type
		type: string 
		description: Whether it is a main dish, dessert or something else
		example: "Main"
		required: true
	  vegetarian: 
		displayName: Vegetarian
		type: boolean 
		description: Does it contain meat
		required: false
	  freezable:
	    displayName: Freezable
		type: boolean
		description: Is it possible to freeze it for further users
		required: false
  put:
    queryParameters:
	  accessToken:
	    displayName: Access Token
		type: string
		description: Token giving you a permission to call
		required: true
  post:
	queryParameters:
	  accessToken:
	body:
	  application/json:
	    example: !include recipemap-include-recipe-new.sample
  
/ingredients:
  get:
  put:
  post:
  /{ingredientclass}:
    get: